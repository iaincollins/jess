{
    "id": "d3b15149-46af-67f9-880e-8c4b1b5a7a38",
    "name": "Newslabs API",
    "order": [
        "ded879eb-9d2d-2b0b-87fe-053e54691c3f",
        "07343648-8b4a-5c2c-4782-3ff542c5017a",
        "5b98edcd-0f36-ffc4-4981-e831a60f556c",
        "77d85141-f20b-d9d2-0a0e-ee0afa971695",
        "7476f416-b6ce-aa1c-6b94-fe829b40da36",
        "c58d21c8-7bdd-4328-acb1-98ca1ab0174a",
        "80397c6a-adea-ee5a-7697-12ace83def51",
        "6571098b-46f4-911d-1ac5-f01b7eb15b03",
        "607bb219-855f-13a7-e877-1b91e9c26831",
        "52be290b-b13d-1e8e-2739-b41e9c4dc665",
        "d3bf7136-1a80-aa11-2ed4-b9bf676d9f17",
        "5ad9d28a-259e-4d92-eccf-390f09b637df",
        "4468cb48-115a-c1c8-e99e-8ce526e83d31",
        "a91773f8-e81d-1e52-7bca-f5fec9c13db7",
        "d16ad039-eefc-ab8a-87ec-2440a2260481"
    ],
    "requests": [
        {
            "collectionId": "d3b15149-46af-67f9-880e-8c4b1b5a7a38",
            "data": [],
            "dataMode": "params",
            "description": "Finds concepts in the knowledge base using a full text search term. Useful for building type ahead fields to find things. Returns only concepts that have been tagged on things.\n<p>\nResponse is in OpenSearch Suggestions 1.1 JSON format\n</p>\n<p>Typical use-case is for type-ahead find widgets</p>\n<p>Parameters are:<p>\n<ul>\n<li><b>q</b> : string - a full text search term</li>\n<li><b>limit</b> : integer - max num of suggestions to return</li>\n<li><b>class</b>: optional URI defining the ontology class to filter concepts on - multiple can be specified</li>\n</ul>",
            "headers": "",
            "id": "07343648-8b4a-5c2c-4782-3ff542c5017a",
            "method": "GET",
            "name": "Find Tagged Concepts",
            "time": 1397057526913,
            "timestamp": 0,
            "url": "{{host}}/concepts/tagged?q=roone&limit=10&apikey={{apikey}}",
            "version": 2
        },
        {
            "collectionId": "d3b15149-46af-67f9-880e-8c4b1b5a7a38",
            "data": [],
            "dataMode": "params",
            "description": "Polymoprhic Search, finds Creative Works, Storylines and Events in the KB.<br/>\nStorylines and Events a returned with associated concepts, and the Creative Works tagged with them<br/>\nCreative Works are returned with the concepts they are tagged with.<br/>\n<p>Parameters are:<p>\n<ul>\n<li><b>tag</b>: URI of a concept that things might be tagged with - multiple tags can be specified</li>\n<li><b>tagop</b>: boolean operand {and | or} applied to specified tags (AND is default)</li>\n<li><b>limit</b> : integer - max num of things to return</li>\n<li><b>before</b>: date in YYYY-MM-DD format defining the date before which articles were published</li>\n<li><b>after</b>: date in YYYY-MM-DD format defining the date after which articles were published</li>\n<li><b>product</b> : filter by bbc:product URI</li>\n</ul>\n<p>Warning !!- stick to relatively tight date ranges (1 to 2 months), as this is heavyweight and could perform poorly over long time periods</p>",
            "headers": "",
            "id": "4468cb48-115a-c1c8-e99e-8ce526e83d31",
            "method": "GET",
            "name": "Finds Things in the knowledge base",
            "time": 1397057804588,
            "timestamp": 0,
            "url": "{{host}}/things?tag=http://dbpedia.org/resource/Syria&limit=10&apikey={{apikey}}",
            "version": 2
        },
        {
            "collectionId": "d3b15149-46af-67f9-880e-8c4b1b5a7a38",
            "data": [],
            "dataMode": "params",
            "description": "A geospatial multi-hop semantic search for creative work via the graph of tagged concepts with a radius of some location.\nCombining geospatial with graph search.\n<p>Parameters are:<p>\n<ul>\n<li><b>about-tag-type</b>: Ontology class URI, find creative works by the type (class) of thing they are tagged with, eg http://dbpedia.org/ontology/Person</li>\n<li><b>about-tag-predicate</b>: Ontology predicate URI - find creative works tagged with concepts that have wider associations with this predicate. eg http://dbpedia.org/ontology/party</li>\n<li><b>about-tag-object</b>: Concept URI - find creative works tagged with concepts that have wider associations where the about-tag-predicate is associated with this object/concept. eg http://dbpedia.org/resource/Conservative_Party_(UK)</li>\n<li><b>point</b>: {lat,long}, eg:  51.5,-1.0</li>\n<li><b>radius</b>: {Nmi|km}, eg 10mi , 20km</li>\n<li><b>limit</b> : integer - max number of articles to return, default 10</li>\n<li><b>offset</b> : integer - offset to start results from to allow for paging / infinite scroll</li>\n<li><b>before</b>: optional date in YYYY-MM-DD format defining the date before which articles were published</li>\n<li><b>after</b>: optional date in YYYY-MM-DD format defining the date after which articles were published</li>\n<li><b>product</b> : optional filter by bbc:product URI</li>\n</ul>\n<p>Headers are:<p>\n<ul>\n<li>Accept: application/json | application/ld+json</li>",
            "headers": "Accept: application/json\n",
            "id": "52be290b-b13d-1e8e-2739-b41e9c4dc665",
            "method": "GET",
            "name": "Find Creative Works Geo-multi-hop",
            "time": 1397057717903,
            "timestamp": 0,
            "url": "{{host}}/creative-works?about-tag-type=http://dbpedia.org/ontology/Person&about-tag-predicate=http://dbpedia.org/ontology/party&about-tag-object=http://dbpedia.org/resource/Conservative_Party_(UK)&point=53.38,-1.47&radius=15km&limit=5&offset=0&apikey={{apikey}}",
            "version": 2
        },
        {
            "collectionId": "d3b15149-46af-67f9-880e-8c4b1b5a7a38",
            "data": [],
            "dataMode": "params",
            "description": "Retrieve a set of facets for a search projection. Pass in the same search phrase and filters as for a full text search request, and a property to facet on, and get a list of the most frequently occurring facets for that facet type.\n<p>Parameters are:<p>\n<ul>\n<li><b>facetOn</b>: A facet type property,options are <br/>\nhttp://www.bbc.co.uk/ontologies/creativework/facetPerson<br/>\nhttp://www.bbc.co.uk/ontologies/creativework/facetPlace<br/>\nhttp://www.bbc.co.uk/ontologies/creativework/facetOrganisation<br/>\nhttp://www.bbc.co.uk/ontologies/creativework/primaryFormat<br/>\nhttp://www.bbc.co.uk/ontologies/bbc/product\n</li>\n<li><b>q</b>: A full text search phrase</li>\n<li><b>facetFilter</b>: optional URI of a facet to filter a results projection on (multiple can be \napplied), e.g. http://www.bbc.co.uk/ontologies/bbc/NewsWeb or http://dbpedia.org/resource/David_Cameron</li>\n<li><b>highlightClass</b>: optional CSS class name applied to the search results 'snippet' span element</li>\n<li><b>before</b>: optional date in YYYY-MM-DD format defining the date before which articles were published</li>\n<li><b>after</b>: optional date in YYYY-MM-DD format defining the date after which articles were published</li>\n<li><b>limit</b> : integer - max number of facet instances to return, default 10</li>\n</ul>",
            "headers": "Accept: application/json\n",
            "id": "5ad9d28a-259e-4d92-eccf-390f09b637df",
            "method": "GET",
            "name": "Get Facets for Full Text Search",
            "time": 1397057773668,
            "timestamp": 0,
            "url": "{{host}}/creative-works/search/facets?q=westminster&facetOn=http://www.bbc.co.uk/ontologies/creativework/facetPerson&limit=20&apikey={{apikey}}",
            "version": 2
        },
        {
            "collectionId": "d3b15149-46af-67f9-880e-8c4b1b5a7a38",
            "data": [],
            "dataMode": "params",
            "description": "Finds tagged concepts in the knowledge base filtered by type. Typical use-case is type-ahead search\n<p>Parameters are:<p>\n<ul>\n<li><b>q</b> : string - a full text search term</li>\n<li><b>limit</b> : integer - max num of concepts to return</li>\n<li><b>class</b>: optional URI defining the ontology class to filter concepts on</li>\n</ul>\n<p>Response is in OpenSearch Suggestions 1.1 JSON format</p>\n",
            "headers": "",
            "id": "5b98edcd-0f36-ffc4-4981-e831a60f556c",
            "method": "GET",
            "name": "Find Tagged Concepts Filtered by Type",
            "time": 1397057545624,
            "timestamp": 0,
            "url": "{{host}}/concepts/tagged?q=apple&class=http://dbpedia.org/ontology/Organisation&limit=10&apikey={{apikey}}",
            "version": 2
        },
        {
            "collectionId": "d3b15149-46af-67f9-880e-8c4b1b5a7a38",
            "data": [],
            "dataMode": "params",
            "description": "A geospatial semantic search for creative work. Finds creative works tagged with places with a radius of a supplied latitude and longitude.\n<p>Parameters are:<p>\n<ul>\n<li><b>point</b>: {lat,long}, eg:  51.5,-1.0</li>\n<li><b>radius</b>: {Nmi|km}, eg 10mi , 20km</li>\n<li><b>limit</b> : integer - max number of articles to return, default 10</li>\n<li><b>offset</b> : integer - offset to start results from to allow for paging / infinite scroll</li>\n<li><b>before</b>: optional date in YYYY-MM-DD format defining the date before which articles were published</li>\n<li><b>after</b>: optional date in YYYY-MM-DD format defining the date after which articles were published</li>\n<li><b>product</b> : optional filter by bbc:product URI</li>\n</ul>\n<p>Headers are:<p>\n<ul>\n<li>Accept: application/json | application/ld+json</li>",
            "headers": "Accept: application/json\n",
            "id": "607bb219-855f-13a7-e877-1b91e9c26831",
            "method": "GET",
            "name": "Find Creative Works Geospatial",
            "time": 1397057699135,
            "timestamp": 0,
            "url": "{{host}}/creative-works?point=53.38,-1.47&radius=15km&limit=5&offset=0&apikey={{apikey}}",
            "version": 2
        },
        {
            "collectionId": "d3b15149-46af-67f9-880e-8c4b1b5a7a38",
            "data": [],
            "dataMode": "params",
            "description": "A multi-hop semantic search for creative work via the graph of tagged concepts\n<p>Parameters are:<p>\n<ul>\n<li><b>about-tag-type</b>: Ontology class URI, find creative works by the type (class) of thing they are tagged with, eg http://dbpedia.org/ontology/Person</li>\n<li><b>about-tag-predicate</b>: Ontology predicate URI - find creative works tagged with concepts that have wider associations with this predicate. eg http://dbpedia.org/ontology/party</li>\n<li><b>about-tag-object</b>: Concept URI - find creative works tagged with concepts that have wider associations where the about-tag-predicate is associated with this object/concept. eg http://dbpedia.org/resource/Conservative_Party_(UK)</li>\n<li><b>limit</b> : integer - max number of articles to return, default 10</li>\n<li><b>offset</b> : integer - offset to start results from to allow for paging / infinite scroll</li>\n<li><b>before</b>: optional date in YYYY-MM-DD format defining the date before which articles were published</li>\n<li><b>after</b>: optional date in YYYY-MM-DD format defining the date after which articles were published</li>\n<li><b>product</b> : optional filter by bbc:product URI</li>\n</ul>\n<p>Headers are:<p>\n<ul>\n<li>Accept: application/json | application/ld+json</li>",
            "headers": "Accept: application/json\n",
            "id": "6571098b-46f4-911d-1ac5-f01b7eb15b03",
            "method": "GET",
            "name": "Find Creative Works Multi-hop",
            "time": 1397057684604,
            "timestamp": 0,
            "url": "{{host}}/creative-works?about-tag-type=http://dbpedia.org/ontology/Person&about-tag-predicate=http://dbpedia.org/ontology/party&about-tag-object=http://dbpedia.org/resource/Conservative_Party_(UK)&limit=5&offset=0&apikey={{apikey}}",
            "version": 2
        },
        {
            "collectionId": "d3b15149-46af-67f9-880e-8c4b1b5a7a38",
            "data": [],
            "dataMode": "params",
            "description": "Finds most frequently tagged concepts in the knowledge-base co-occurring with a supplied source concept\n<p>Parameters are:<p>\n<ul>\n<li><b>uri</b>: URI of source concept</li>\n<li><b>limit</b> : integer - max number of co-occurring concepts to return</li>\n<li><b>type</b>: optional URI defining the ontology class to filter concepts by</li>\n<li><b>before</b>: date in YYYY-MM-DD format defining the date before which tag frequencies should be calculated</li>\n<li><b>after</b>: date in YYYY-MM-DD format defining the date after which tag frequencies should be calculated</li>\n</ul>",
            "headers": "",
            "id": "7476f416-b6ce-aa1c-6b94-fe829b40da36",
            "method": "GET",
            "name": "Find Concept Co-Occurrences",
            "time": 1397057597002,
            "timestamp": 0,
            "url": "{{host}}/concepts/co-occurrences?uri=http://dbpedia.org/resource/Nigel_Farage&type=http://dbpedia.org/ontology/Person&limit=10&after=2014-02-01&apikey={{apikey}}",
            "version": 2
        },
        {
            "collectionId": "d3b15149-46af-67f9-880e-8c4b1b5a7a38",
            "data": [],
            "dataMode": "params",
            "description": "Finds most frequently tagged concepts in the knowledge base.\n<p>Parameters are:<p>\n<ul>\n<li><b>limit</b> : integer - max num of concepts to return</li>\n<li><b>type</b>: optional URI defining the ontology class to filter concepts on</li>\n<li><b>before</b>: date in YYYY-MM-DD format defining the date before which tag frequencies should be calculated</li>\n<li><b>after</b>: date in YYYY-MM-DD format defining the date after which tag frequencies should be calculated</li>\n</ul>\nNOTE, quite a heavy weight query so don't expect this to be rocket fast, please keep date ranges narrow.",
            "headers": "",
            "id": "77d85141-f20b-d9d2-0a0e-ee0afa971695",
            "method": "GET",
            "name": "Find Concept Occurrences",
            "time": 1397057578850,
            "timestamp": 0,
            "url": "{{host}}/concepts/occurrences?limit=10&after=2014-03-01&type=http://dbpedia.org/ontology/Person&apikey={{apikey}}",
            "version": 2
        },
        {
            "collectionId": "d3b15149-46af-67f9-880e-8c4b1b5a7a38",
            "data": [],
            "dataMode": "params",
            "description": "A semantic search for creative work using tagged concepts\n<p>Parameters are:<p>\n<ul>\n<li><b>tag</b>: URI of a concept - multiple tag parameters can be used</li>\n<li><b>tagop</b> : {and | or | fingerprint} The operations to apply to the supplied tags. Default is 'and'. 'fingerprint' returns creative works best matching the set of tags supplied. (Warning fingerprint search is not fast!)</li>\n<li><b>limit</b> : integer - max number of articles to return, default 10</li>\n<li><b>offset</b> : integer - offset to start results from to allow for paging / infinite scroll</li>\n<li><b>before</b>: optional date in YYYY-MM-DD format defining the date before which articles were published</li>\n<li><b>after</b>: optional date in YYYY-MM-DD format defining the date after which articles were published</li>\n<li><b>product</b> : optional filter by bbc:product URI</li>\n</ul>\n<p>Headers are:<p>\n<ul>\n<li>Accept: application/json | application/ld+json</li>",
            "headers": "Accept: application/json\n",
            "id": "80397c6a-adea-ee5a-7697-12ace83def51",
            "method": "GET",
            "name": "Find Creative Works",
            "time": 1397057650160,
            "timestamp": 0,
            "url": "{{host}}/creative-works?tag=http://dbpedia.org/resource/David_Cameron&tag=http://dbpedia.org/resource/Nigel_Farage&product=http://www.bbc.co.uk/ontologies/bbc/TheGuardian&tagop=and&limit=5&offset=0&apikey={{apikey}}",
            "version": 2
        },
        {
            "collectionId": "d3b15149-46af-67f9-880e-8c4b1b5a7a38",
            "data": [],
            "dataMode": "params",
            "description": "Polymorphic search, finds Creative Works, Storylines and Events in the KB.<br/>\nStorylines and Events a returned with associated concepts, and the Creative Works tagged with them<br/>\nCreative Works are returned with the concepts they are tagged with.<br/>\n<p>Parameters are:<p>\n<ul>\n<li><b>tag</b>: URI of a concept that things might be tagged with - multiple tags can be specified</li>\n<li><b>tagop</b>: boolean operand {and | or} applied to specified tags (AND is default)</li>\n<li><b>class</b>: URI of ontology type of thing to return</li>\n<li><b>limit</b> : integer - max num of things to return</li>\n<li><b>before</b>: date in YYYY-MM-DD format defining the date before which articles were published</li>\n<li><b>after</b>: date in YYYY-MM-DD format defining the date after which articles were published</li>\n<li><b>product</b> : filter by bbc:product URI</li>\n</ul>\n<p>Warning !!- stick to relatively tight date ranges (1 to 2 months), as this is heavyweight and could perform poorly over long time periods</p>\n<p>Class types of thing are:<p>\n<ul>\n<li>http://purl.org/ontology/storyline/Storyline</li>\n<li>http://www.bbc.co.uk/ontologies/news/Event</li>\n<li>http://www.bbc.co.uk/ontologies/creativework/CreativeWork</li>\n<li>http://www.bbc.co.uk/ontologies/creativework/NewsItem</li>\n</ul>",
            "headers": "",
            "id": "a91773f8-e81d-1e52-7bca-f5fec9c13db7",
            "method": "GET",
            "name": "Finds Things by type in the knowledge base",
            "time": 1397057846215,
            "timestamp": 0,
            "url": "{{host}}/things?tag=http://dbpedia.org/resource/Syria&class=http://purl.org/ontology/storyline/Storyline&limit=10&apikey={{apikey}}",
            "version": 2
        },
        {
            "collectionId": "d3b15149-46af-67f9-880e-8c4b1b5a7a38",
            "data": [],
            "dataMode": "params",
            "description": "Gets a creative work by its URI",
            "headers": "Accept: application/json\n",
            "id": "c58d21c8-7bdd-4328-acb1-98ca1ab0174a",
            "method": "GET",
            "name": "GET a Creative Work",
            "time": 1397057620906,
            "timestamp": 0,
            "url": "{{host}}/creative-works?uri=http://www.bbc.co.uk/news/uk-politics-26823817&apikey={{apikey}}",
            "version": 2
        },
        {
            "collectionId": "d3b15149-46af-67f9-880e-8c4b1b5a7a38",
            "data": [],
            "dataMode": "params",
            "description": "Retrieves the wider graph of any given storyline or event, pulling together all the slots and arrangements of the associated events and storylines to the supplied one, along with concepts and associated creative works<br/>\n<p>Parameters are:<p>\n<ul>\n<li><b>uri</b>: URI of a storyline or event</li>\n</ul>",
            "headers": "",
            "id": "d16ad039-eefc-ab8a-87ec-2440a2260481",
            "method": "GET",
            "name": "Get the Graph of a Storyline or Event",
            "time": 1397057862565,
            "timestamp": 0,
            "url": "{{host}}/storylines/graphs?uri=http://www.bbc.co.uk/things/80e4686b-6303-4489-941d-8658ef070729&apikey={{apikey}}",
            "version": 2
        },
        {
            "collectionId": "d3b15149-46af-67f9-880e-8c4b1b5a7a38",
            "data": [],
            "dataMode": "params",
            "description": "A full text semantic search with faceting on people, places, organisations, format, and publication (product) for creative works.\n<p>Parameters are:<p>\n<ul>\n<li><b>q</b>: A full text search phrase</li>\n<li><b>facet</b>: optional URI of a facet to filter a results projection on (multiple can be applied), e.g. http://www.bbc.co.uk/ontologies/bbc/NewsWeb or http://dbpedia.org/resource/David_Cameron</li>\n<li><b>highlightClass</b>: optional CSS class name applied to the search results 'snippet' span element</li>\n<li><b>limit</b> : integer - max number of articles to return in a page, default 10</li>\n<li><b>offset</b> : integer - offset to start results from to allow for paging / infinite scroll</li>\n<li><b>before</b>: optional date in YYYY-MM-DD format defining the date before which articles were published</li>\n<li><b>after</b>: optional date in YYYY-MM-DD format defining the date after which articles were published</li>\n</ul>\n<p>Headers are:<p>\n<ul>\n<li>Accept: application/json | application/ld+json</li>",
            "headers": "Accept: application/json\n",
            "id": "d3bf7136-1a80-aa11-2ed4-b9bf676d9f17",
            "method": "GET",
            "name": "Full Text Search Creative Works",
            "time": 1397057750305,
            "timestamp": 0,
            "url": "{{host}}/creative-works/search?q=westminster&highlightClass=myClass&apikey={{apikey}}",
            "version": 2
        },
        {
            "collectionId": "d3b15149-46af-67f9-880e-8c4b1b5a7a38",
            "data": [],
            "dataMode": "params",
            "description": "Gets a concept from the knowledge base, and the most recent creative works tagged with it.\n<br/>Parameters :\n<ul>\n<li><b>uri</b> : The URI of the concept to retrieve</li>\n<li><b>limit</b> : integer - max number of creative works to return</li>\n<li><b>product</b> : filter creative works by bbc:product URI</li>\n</ul>",
            "headers": "",
            "id": "ded879eb-9d2d-2b0b-87fe-053e54691c3f",
            "method": "GET",
            "name": "GET Concept",
            "time": 1397057394233,
            "timestamp": 0,
            "url": "{{host}}/concepts?uri=http://dbpedia.org/resource/Wayne_Rooney&limit=5&apikey={{apikey}}",
            "version": 2
        }
    ],
    "timestamp": 1381951721262
}
